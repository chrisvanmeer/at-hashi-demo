datacenter = "{{ hashicorp_datacenter_name }}"
data_dir = "{{ consul_data_directory }}"
encrypt = "{{ consul_ecryption_key }}"
ca_file = "{{ consul_etc_directory }}/consul-agent-ca.pem"
{% if ansible_hostname in groups['servers'] %}
{% set type = "server" %}
{% elif ansible_hostname in groups['clients'] %}
{% set type = "client" %}
{% endif %}
cert_file = "{{ consul_etc_directory }}/{{ hashicorp_datacenter_name }}-{{ type }}-consul-0.pem"
key_file = "{{ consul_etc_directory }}/{{ hashicorp_datacenter_name }}-{{ type }}-consul-0-key.pem"
verify_incoming = false
verify_outgoing = false
verify_server_hostname = false
retry_join = [{% for host in groups['servers'] %}{{ hostvars[host].ansible_default_ipv4.address | to_json }}{% if not loop.last %}, {% endif %}{% endfor %}]
{% if ansible_hostname in groups['servers'] %}
bind_addr = "0.0.0.0"
client_addr = "0.0.0.0"
ui = true
{% elif ansible_hostname in groups['clients'] %}
bind_addr = "{{ ansible_host }}"
check_update_interval = "0s"
{% endif %}

log_level = "{{ consul_log_level }}"
log_json = {{ consul_log_json }}
log_file = "{{ consul_log_directory }}/"
log_rotate_duration = "{{ consul_log_rotate_duration }}"
log_rotate_max_files = {{ consul_log_rotate_max_files }}

acl = {
  enabled = true
  default_policy = "allow"
  enable_token_persistence = true
  tokens = {
    #agent = "<WILL BE FILLED LATER>"
  }
}

performance {
  raft_multiplier = 1
}

{% if ansible_hostname in groups['servers'] %}
server = true
bootstrap_expect = {{ groups['servers'] | length }}
{% elif ansible_hostname in groups['clients'] %}
server = false
{% endif %}
rejoin_after_leave = true

ports {
  grpc = 8502
}

connect {
  enabled = true
}
