job "{{ at_demo_name }}" {
  datacenters = ["{{ hashicorp_datacenter_name }}"]
  type        = "service"

  // For demo purposes only, spread over all but first client.
  constraint {
    attribute = "${node.unique.id}"
    operator  = "!="
    value     = "{{ nomad_first_client_node_id.stdout }}"
  }

  group "{{ at_demo_name }}" {
    count = {{ at_demo_group_count }}

    network {
      port "{{ at_demo_port_name }}" {
        to = 80
      }
    }

    service {
      name = "{{ at_demo_name }}"
      port = "{{ at_demo_port_name }}"

      tags = [
        "traefik.enable=true",
        "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https",
        "traefik.http.routers.{{ at_demo_name }}-redirect.rule={{ at_demo_service_tag_traefik_rule }}",
        "traefik.http.routers.{{ at_demo_name }}-redirect.entrypoints=http",
        "traefik.http.routers.{{ at_demo_name }}-redirect.middlewares=redirect-to-https",
        "traefik.http.routers.{{ at_demo_name }}.entrypoints=https",
        "traefik.http.routers.{{ at_demo_name }}.rule={{ at_demo_service_tag_traefik_rule }}",
      ]

      check {
        name     = "check if demo is alive"
        type     = "http"
        path     = "/"
        interval = "10s"
        timeout  = "2s"
      }

    }

    task "{{ at_demo_name }}" {

      env {
        PORT       = "${NOMAD_PORT_{{ at_demo_port_name }}}"
        NODE_IP    = "${NOMAD_IP_{{ at_demo_port_name }}}"
        FAVICON    = "{{ at_demo_env_favicon }}"
        IMG_SOURCE = "{{ at_demo_env_img_source }}"
      }

      driver = "docker"
      config {
        load  = "{{ at_demo_task_config_load }}"
        image = "{{ at_demo_task_config_image }}"
        ports = ["{{ at_demo_port_name }}"]
      }

      artifact {
        source = "{{ at_demo_task_artifact_source }}"
      }

      resources {
        cpu    = {{ at_demo_task_resources_cpu_mhz }}
        memory = {{ at_demo_task_resources_mem_mb }}
      }

    }

  }

}