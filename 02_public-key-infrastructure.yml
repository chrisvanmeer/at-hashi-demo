---
- name: "AT Computing - HashiCorp Demo - Public Key Infrastructure"
  hosts: all
  become: true

  vars_files:
    - vars/hashicorp/general.yml
    - vars/hashicorp/ssl.yml

  tasks:
    ## Certificate Authority
    ## The following instructions show how to set up a simple self-signed CA certificate.
    - name: Create private key with password protection
      community.crypto.openssl_privatekey:
        path: /path/to/ca-certificate.key
        passphrase: "{{ secret_ca_passphrase }}"

    - name: Create certificate signing request (CSR) for CA certificate
      community.crypto.openssl_csr_pipe:
        privatekey_path: /path/to/ca-certificate.key
        privatekey_passphrase: "{{ secret_ca_passphrase }}"
        common_name: Ansible CA
        use_common_name_for_san: false
        basic_constraints:
          - "CA:TRUE"
        basic_constraints_critical: yes
        key_usage:
          - keyCertSign
        key_usage_critical: true
      register: ca_csr

    - name: Create self-signed CA certificate from CSR
      community.crypto.x509_certificate:
        path: /path/to/ca-certificate.pem
        csr_content: "{{ ca_csr.csr }}"
        privatekey_path: /path/to/ca-certificate.key
        privatekey_passphrase: "{{ secret_ca_passphrase }}"
        provider: selfsigned

    ## Server certificate
    ## The following extended example reads the existing certificate from server1
    ## and provides it to the community.crypto.x509_certificate_pipe module, and only writes the result back if it was changed.
    - name: Create private key for new certificate on server_1
      community.crypto.openssl_privatekey:
        path: /path/to/certificate.key
      delegate_to: server1
      run_once: true

    - name: Create certificate signing request (CSR) for new certificate
      community.crypto.openssl_csr_pipe:
        privatekey_path: /path/to/certificate.key
        entrust_not_after: +3650d
        subject_alt_name:
          - "DNS:ansible.com"
          - "DNS:www.ansible.com"
          - "DNS:docs.ansible.com"
      delegate_to: server1
      run_once: true
      register: csr

    - name: Check whether certificate exists
      stat:
        path: /path/to/certificate.pem
      delegate_to: server1
      run_once: true
      register: certificate_exists

    - name: Read existing certificate if exists
      slurp:
        src: /path/to/certificate.pem
      when: certificate_exists.stat.exists
      delegate_to: server1
      run_once: true
      register: certificate

    - name: Sign certificate with our CA
      community.crypto.x509_certificate_pipe:
        content: "{{ (certificate.content | b64decode) if certificate_exists.stat.exists else omit }}"
        csr_content: "{{ csr.csr }}"
        entrust_not_after: +3650d
        provider: ownca
        ownca_path: /path/to/ca-certificate.pem
        ownca_privatekey_path: /path/to/ca-certificate.key
        ownca_privatekey_passphrase: "{{ secret_ca_passphrase }}"
        ownca_not_after: +3650d
        ownca_not_before: "-1d"
      delegate_to: server_2
      run_once: true
      register: certificate

    - name: Write certificate file on server1
      copy:
        dest: /path/to/certificate.pem
        content: "{{ certificate.certificate }}"
        mode: "0644"
      delegate_to: server_1
      run_once: true
      when: certificate is changed
